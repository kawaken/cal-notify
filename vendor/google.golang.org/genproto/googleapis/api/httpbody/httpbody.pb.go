// Code generated by protoc-gen-go.
// source: google.golang.org/genproto/googleapis/api/httpbody/httpbody.proto
// DO NOT EDIT!

/*
Package google_api is a generated protocol buffer package.

It is generated from these files:
	google.golang.org/genproto/googleapis/api/httpbody/httpbody.proto

It has these top-level messages:
	HttpBody
*/
package google_api // import "google.golang.org/genproto/googleapis/api/httpbody"

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// Message that represents an arbitrary HTTP body. It should only be used for
// payload formats that can't be represented as JSON, such as raw binary or
// an HTML page.
//
//
// This message can be used both in streaming and non-streaming API methods in
// the request as well as the response.
//
// It can be used as a top-level request field, which is convenient if one
// wants to extract parameters from either the URL or HTTP template into the
// request fields and also want access to the raw HTTP body.
//
// Example:
//
//     message GetResourceRequest {
//       // A unique request id.
//       string request_id = 1;
//
//       // The raw HTTP body is bound to this field.
//       google.api.HttpBody http_body = 2;
//     }
//
//     service ResourceService {
//       rpc GetResource(GetResourceRequest) returns (google.api.HttpBody);
//       rpc UpdateResource(google.api.HttpBody) returns (google.protobuf.Empty);
//     }
//
// Example with streaming methods:
//
//     service CaldavService {
//       rpc GetCalendar(stream google.api.HttpBody)
//         returns (stream google.api.HttpBody);
//       rpc UpdateCalendar(stream google.api.HttpBody)
//         returns (stream google.api.HttpBody);
//     }
//
// Use of this type only changes how the request and response bodies are
// handled, all other features will continue to work unchanged.
type HttpBody struct {
	// The HTTP Content-Type string representing the content type of the body.
	ContentType string `protobuf:"bytes,1,opt,name=content_type,json=contentType" json:"content_type,omitempty"`
	// HTTP body binary data.
	Data []byte `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
}

func (m *HttpBody) Reset()                    { *m = HttpBody{} }
func (m *HttpBody) String() string            { return proto.CompactTextString(m) }
func (*HttpBody) ProtoMessage()               {}
func (*HttpBody) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func init() {
	proto.RegisterType((*HttpBody)(nil), "google.api.HttpBody")
}

func init() {
	proto.RegisterFile("google.golang.org/genproto/googleapis/api/httpbody/httpbody.proto", fileDescriptor0)
}

var fileDescriptor0 = []byte{
	// 172 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x44, 0x8d, 0xb1, 0x0e, 0x82, 0x30,
	0x10, 0x86, 0x53, 0x42, 0x8c, 0x56, 0x74, 0xe8, 0xc4, 0x88, 0x4e, 0x4c, 0xed, 0xe0, 0x13, 0xc0,
	0xa2, 0x6e, 0x84, 0xb8, 0x9b, 0x02, 0xcd, 0x49, 0x82, 0xbd, 0x0b, 0xde, 0xd2, 0xd7, 0xf1, 0x49,
	0x8d, 0x88, 0xba, 0x7d, 0xb9, 0xfb, 0xf3, 0x7d, 0xb2, 0x00, 0x44, 0x18, 0x9c, 0x06, 0x1c, 0xac,
	0x07, 0x8d, 0x23, 0x18, 0x70, 0x9e, 0x46, 0x64, 0x34, 0x9f, 0x97, 0xa5, 0xfe, 0x61, 0x2c, 0xf5,
	0xe6, 0xc6, 0x4c, 0x0d, 0x76, 0xe1, 0x07, 0x7a, 0x9a, 0x29, 0x39, 0x2b, 0x2c, 0xf5, 0xfb, 0x42,
	0x2e, 0x4f, 0xcc, 0x54, 0x62, 0x17, 0xd4, 0x4e, 0x26, 0x2d, 0x7a, 0x76, 0x9e, 0xaf, 0x1c, 0xc8,
	0xa5, 0x22, 0x13, 0xf9, 0xaa, 0x5e, 0xcf, 0xb7, 0x4b, 0x20, 0xa7, 0x94, 0x8c, 0x3b, 0xcb, 0x36,
	0x8d, 0x32, 0x91, 0x27, 0xf5, 0xc4, 0x65, 0x2e, 0xb7, 0x2d, 0xde, 0xf5, 0x5f, 0x5a, 0x6e, 0xbe,
	0xca, 0xea, 0xdd, 0xab, 0xc4, 0x33, 0x8a, 0x8f, 0x45, 0x75, 0x6e, 0x16, 0x53, 0xff, 0xf0, 0x0a,
	0x00, 0x00, 0xff, 0xff, 0x1b, 0xb1, 0xdb, 0xe7, 0xc4, 0x00, 0x00, 0x00,
}
