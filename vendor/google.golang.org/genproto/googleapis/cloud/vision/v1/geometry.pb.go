// Code generated by protoc-gen-go.
// source: google.golang.org/genproto/googleapis/cloud/vision/v1/geometry.proto
// DO NOT EDIT!

/*
Package v1 is a generated protocol buffer package.

It is generated from these files:
	google.golang.org/genproto/googleapis/cloud/vision/v1/geometry.proto
	google.golang.org/genproto/googleapis/cloud/vision/v1/image_annotator.proto

It has these top-level messages:
	Vertex
	BoundingPoly
	Position
	Feature
	ImageSource
	Image
	FaceAnnotation
	LocationInfo
	Property
	EntityAnnotation
	SafeSearchAnnotation
	LatLongRect
	ColorInfo
	DominantColorsAnnotation
	ImageProperties
	ImageContext
	AnnotateImageRequest
	AnnotateImageResponse
	BatchAnnotateImagesRequest
	BatchAnnotateImagesResponse
*/
package v1 // import "google.golang.org/genproto/googleapis/cloud/vision/v1"

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// A vertex represents a 2D point in the image.
// NOTE: the vertex coordinates are in the same scale as the original image.
type Vertex struct {
	// X coordinate.
	X int32 `protobuf:"varint,1,opt,name=x" json:"x,omitempty"`
	// Y coordinate.
	Y int32 `protobuf:"varint,2,opt,name=y" json:"y,omitempty"`
}

func (m *Vertex) Reset()                    { *m = Vertex{} }
func (m *Vertex) String() string            { return proto.CompactTextString(m) }
func (*Vertex) ProtoMessage()               {}
func (*Vertex) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

// A bounding polygon for the detected image annotation.
type BoundingPoly struct {
	// The bounding polygon vertices.
	Vertices []*Vertex `protobuf:"bytes,1,rep,name=vertices" json:"vertices,omitempty"`
}

func (m *BoundingPoly) Reset()                    { *m = BoundingPoly{} }
func (m *BoundingPoly) String() string            { return proto.CompactTextString(m) }
func (*BoundingPoly) ProtoMessage()               {}
func (*BoundingPoly) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *BoundingPoly) GetVertices() []*Vertex {
	if m != nil {
		return m.Vertices
	}
	return nil
}

// A 3D position in the image, used primarily for Face detection landmarks.
// A valid Position must have both x and y coordinates.
// The position coordinates are in the same scale as the original image.
type Position struct {
	// X coordinate.
	X float32 `protobuf:"fixed32,1,opt,name=x" json:"x,omitempty"`
	// Y coordinate.
	Y float32 `protobuf:"fixed32,2,opt,name=y" json:"y,omitempty"`
	// Z coordinate (or depth).
	Z float32 `protobuf:"fixed32,3,opt,name=z" json:"z,omitempty"`
}

func (m *Position) Reset()                    { *m = Position{} }
func (m *Position) String() string            { return proto.CompactTextString(m) }
func (*Position) ProtoMessage()               {}
func (*Position) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func init() {
	proto.RegisterType((*Vertex)(nil), "google.cloud.vision.v1.Vertex")
	proto.RegisterType((*BoundingPoly)(nil), "google.cloud.vision.v1.BoundingPoly")
	proto.RegisterType((*Position)(nil), "google.cloud.vision.v1.Position")
}

func init() {
	proto.RegisterFile("google.golang.org/genproto/googleapis/cloud/vision/v1/geometry.proto", fileDescriptor0)
}

var fileDescriptor0 = []byte{
	// 226 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x74, 0x8f, 0xb1, 0x4b, 0x03, 0x31,
	0x14, 0x87, 0x79, 0x57, 0x2c, 0x25, 0xd6, 0xe5, 0x06, 0x39, 0x1c, 0xa4, 0x1c, 0x0e, 0x9d, 0x12,
	0xab, 0x4e, 0x8e, 0x87, 0x20, 0x38, 0x1d, 0x37, 0xb8, 0xd7, 0xeb, 0xe3, 0x11, 0x48, 0xf3, 0x4a,
	0x92, 0x86, 0xa6, 0x7f, 0xb9, 0xa3, 0x34, 0x29, 0x8a, 0xa0, 0xe3, 0xc7, 0xfb, 0x78, 0x1f, 0x3f,
	0xf1, 0x42, 0xcc, 0x64, 0x50, 0x12, 0x9b, 0xb5, 0x25, 0xc9, 0x8e, 0x14, 0xa1, 0xdd, 0x39, 0x0e,
	0xac, 0xca, 0x69, 0xbd, 0xd3, 0x5e, 0x8d, 0x86, 0xf7, 0x1b, 0x15, 0xb5, 0xd7, 0x6c, 0x55, 0x5c,
	0x29, 0x42, 0xde, 0x62, 0x70, 0x49, 0x66, 0xb3, 0xbe, 0x3e, 0x7f, 0xc9, 0x9a, 0x2c, 0x9a, 0x8c,
	0xab, 0xf6, 0x4e, 0x4c, 0xdf, 0xd1, 0x05, 0x3c, 0xd4, 0x73, 0x01, 0x87, 0x06, 0x16, 0xb0, 0xbc,
	0x18, 0x20, 0x53, 0x6a, 0xaa, 0x42, 0xa9, 0x7d, 0x13, 0xf3, 0x8e, 0xf7, 0x76, 0xa3, 0x2d, 0xf5,
	0x6c, 0x52, 0xfd, 0x2c, 0x66, 0x11, 0x5d, 0xd0, 0x23, 0xfa, 0x06, 0x16, 0x93, 0xe5, 0xe5, 0xc3,
	0xad, 0xfc, 0x3b, 0x20, 0xcb, 0xf7, 0xe1, 0xdb, 0x6f, 0x9f, 0xc4, 0xac, 0x67, 0xaf, 0x83, 0x66,
	0xfb, 0xd3, 0xac, 0x7e, 0x35, 0xab, 0x01, 0xd2, 0x89, 0x8e, 0xcd, 0xa4, 0xd0, 0xb1, 0xbb, 0x17,
	0x37, 0x23, 0x6f, 0xff, 0x89, 0x74, 0x57, 0xaf, 0xe7, 0xb5, 0xfd, 0x69, 0x6c, 0x0f, 0x9f, 0x00,
	0x1f, 0xd3, 0x3c, 0xfc, 0xf1, 0x2b, 0x00, 0x00, 0xff, 0xff, 0xe7, 0x23, 0x12, 0x2e, 0x40, 0x01,
	0x00, 0x00,
}
